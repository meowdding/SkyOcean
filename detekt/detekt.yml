complexity:
    CyclomaticComplexMethod: # we have good reasons for this :3
        active: false
    LargeClass:
        active: false  # sometimes a class can get large, and would be worse if split up
    LongParameterList: # too aggressive, classes can need a lot of params
        active: false
    NestedBlockDepth: # too aggressive
        active: false
    ComplexCondition: # aggressive by default, at a complexity of 4
        active: true
        threshold: 6
    LongMethod: # default max length of 60, caught way too much
        active: true
        threshold: 100
    NamedArguments:
        active: true
        ignoreArgumentsMatchingNames: true
        threshold: 6
    TooManyFunctions:
        active: false

exceptions:
    ThrowingExceptionsWithoutMessageOrCause: # there are valid reasons to do this
        active: false
    TooGenericExceptionCaught: # sometimes you just need to catch Exception
        active: false
    TooGenericExceptionThrown: # we don't have our own custom exceptions
        active: false

formatting:
    MaximumLineLength: # ktlint - handled by detekt
        active: false
    MultiLineIfElse:
        active: false
    ArgumentListWrapping: # some arguments are better on the same line (e.g. x,y,z)
        active: false
    ParameterListWrapping: # pedantic, can be useful in compact code
        active: true
        maxLineLength: 160
    EnumWrapping:
        active: true
    NoBlankLineBeforeRbrace: # pedantic
        active: false
    NoConsecutiveBlankLines: # pedantic
        active: false
    NoEmptyFirstLineInMethodBlock: # pedantic
        active: false
    SpacingBetweenDeclarationsWithAnnotations: # nah
        active: false
    SpacingBetweenDeclarationsWithComments: # also nah
        active: false
    FunctionReturnTypeSpacing:
        maxLineLength: 160
    ParameterWrapping:
        maxLineLength: 160
    PropertyWrapping:
        maxLineLength: 160
    Wrapping:
        maxLineLength: 160
    NoWildcardImports: # we use wildcard imports in some places
        active: false

naming:
    NoNameShadowing:
        active: false
    ConstructorParameterNaming: # pedantic
        active: false
    FunctionNaming:
        functionPattern: "[a-z][a-zA-Z0-9]*|[a-z]+$[a-z][a-zA-Z0-9]*"
    VariableNaming:
        variablePattern: "[a-z][A-Za-z0-9]*|[a-z]+$[a-z][A-Za-z0-9]*"

performance:
    UnnecessaryPartOfBinaryExpression:
        active: true

potential-bugs:
    DoubleMutabilityForCollection: # went crazy about all the mutable collections
        active: false
    HasPlatformType: # false positives on config get() methods
        active: false
    Deprecation:
        active: true

style:
    AlsoCouldBeApply:
        active: true
    ClassOrdering:
        active: true
    DoubleNegativeLambda:
        active: true
    MagicNumber: # valid, but awful for ui design
        active: false
    UnusedParameter:
        active: true
        ignoreAnnotated:
            - 'Subscription'
    ReturnCount:
        active: true
        max: 5
        excludeGuardClauses: true
        ignoreAnnotated:
            - 'Subscription'
    MaxLineLength:
        active: true
        maxLineLength: 160
        excludeCommentStatements: true
    LoopWithTooManyJumpStatements:
        active: true
        maxJumpCount: 5
    UnnecessaryAbstractClass: # gets horrendously messed up with Event classes
        active: false
    UnusedPrivateMember: # gets tripped up by API methods
        active: false
    UnusedPrivateProperty: # loops that don't use their iterator
        active: true
        allowedNames: "^(unused|_)$"
    UseCheckOrError:
        active: false
    ForbiddenComment: # every TODO gets flagged
        active: false
    DestructuringDeclarationWithTooManyEntries: # too aggressive
        active: true
        maxDestructuringEntries: 5
    RedundantVisibilityModifierRule:
        active: true
    UnnecessaryBracesAroundTrailingLambda:
        active: true
    NullableBooleanCheck:
        active: true
    UseOrEmpty: # idk i dont vibe with this
        active: false
    WildcardImport: # we use wildcard imports in some places
        active: false

